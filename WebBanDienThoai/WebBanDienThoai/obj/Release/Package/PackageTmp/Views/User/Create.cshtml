

@model WebBanDienThoai.Models.User

@{
    ViewBag.Title = "Tạo Mới Nhân Viên";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@if (Convert.ToInt32(Session["role"].ToString()) == 1)
{
    <div class="curd" style="margin-right:70px;width:100%;">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="breadcrumbs ace-save-state" id="breadcrumbs">
                <div class="breadcrumb">
                    <div class="breadcrumb-left">
                        <i class="menu-icon fa fa-user" aria-hidden="true"></i>
                        <a href="~/Admin/Users" class="title_bread"> Danh sách nhóm sản phẩm</a>
                        <span style="color:#ccc;margin:0px 15px;font-size:20px;"> /</span>
                        <span class="title_bread"> Thêm Mới</span>
                    </div>
                    <div class="breadcrumb-add">
                        @Html.ActionLink("Hủy", "Index", "", new { @class = "btn btn-default" })
                        <input type="submit" value="Lưu Lại" class="btn btn-primary" />
                    </div>
                </div><!-- /.breadcrumb -->


            </div>

            <div class="createandedit">

                <div class="row">

                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <p style="color:red;font-weight:bold;text-align:center;">@ViewBag.check_cate</p>
                    <p style="color:red;font-weight:bold;text-align:center;">@ViewBag.check_alias</p>
                    <div class="col-xs-12 col-md-8">

                        <div class="editcreate">



                            <div class="form-group">
                                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                            </div>


                        </div>
                        <div class="col-xs-12 col-md-4">
                            <div class="visible-status">
                                <p class="title_st">Phân quyền</p>
                                <div class="check-st">
                                    <div class="show-st">
                                        <input type="radio" name="status_role" value="1" checked /> <span class="hideshow">Quản lý</span>
                                    </div>
                                    <div class="show-st">
                                        <input type="radio" name="status_role" value="3" /> <span class="hideshow">Nhân viên khinh doanh</span>
                                    </div>
                                    <div class="show-st">
                                        <input type="radio" name="status_role" value="2" /> <span class="hideshow">Nhân viên kho</span>
                                    </div>
                                </div>
                                <p class="title_st">Hiển thị</p>
                                <div class="check-st">
                                    <div class="show-st">
                                        <input type="radio" name="status_mi" value="true" checked /> <span class="hideshow">Hoạt động</span>
                                    </div>
                                    <div class="show-st">
                                        <input type="radio" name="status_mi" value="false" /> <span class="hideshow">Khóa</span>
                                    </div>
                                </div>

                                <div class="time-stamp">
                                    <p class="title_sts"> Thời Gian:</p>
                                    <input type="text" value="@DateTime.Now" disabled />
                                </div>
                            </div>
                            <div class="image-avatar">
                                <p class="title_anh">Ảnh đại diện</p>

                                <div class="frame-image">
                                    <div class="noset-image">
                                        <input type="file" name="image_avatar" class="hidden" id="uploadFile" onchange="readURL(this);" />
                                        <div class="select-image" onclick="performClick('uploadFile');"><i class="fa fa-picture-o" aria-hidden="true"></i><br />Chọn hình</div>
                                    </div>


                                    <div id="showImage">
                                        <img id="image_showed" width=auto />
                                    </div>

                                </div>

                                <a href="javascript::0" class="change_image" onclick="performClick('uploadFile');">Thay hình ảnh</a>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="text-left" style="margin-top:20px;">
                    <i class="fa fa-angle-double-left" aria-hidden="true" style="color:red !important;"></i>  @Html.ActionLink("Trở lại trang trước", "Index", "", new { style = "color:red;font-size:12px;" })
                </div>
            </div>
        }


    </div>
}
else
{
    <div id="404" class="page-not not-found bg_w">
        <div class="columns-container">
            <div class="container" id="columns">
                <div class="row clearfix">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center">
                        <div class="img-404 text-center">
                            <img src="/Content/ShopPage/images/404.png" alt="Lỗi 404 không tìm thấy trang">
                        </div>
                        <div class="text-center"><a class="btn-outline back-to-col" href="~/AdminHome">Quay lại trang chủ</a></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    function performClick(elemId) {
        var elem = document.getElementById(elemId);
        if (elem && document.createEvent) {
            var evt = document.createEvent("MouseEvents");
            evt.initEvent("click", true, false);
            elem.dispatchEvent(evt);
        }
    }
</script>




<script>
    var loadFile = function (event) {
        var files = event.target.files;
        for (var i = 0; i < files.length; i++) {
            $("#showImage").append("<img src='" + URL.createObjectURL(event.target.files[i]) + "' class='imaged' />");
        }
    }
</script>



<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            $('.noset-image').hide();
            $('.change_image').css("display", "block");
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#image_showed')
                    .attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>



<script>



    $("#NameVoucher").keyup(function () {
        var Text = $(this).val();
        Text = Text.toLowerCase();
        $("#Alias").val(convertToSlug(Text));
    });


    $("#NameVoucher ").mouseout(function () {
        var Text = $(this).val();
        Text = Text.toLowerCase();
        $("#Alias").val(convertToSlug(Text));
    });
</script>
